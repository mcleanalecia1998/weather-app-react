{"ast":null,"code":"var _jsxFileName = \"/Users/aleciamclean/Desktop/Coding/GitHub/weather-app-react/my-app/src/Forecast.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Forecast.css\";\nimport axios from \"axios\";\nimport ForecastDay from \"./ForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n    load();\n  }, [props.coordinate]);\n  async function makeApiRequest() {\n    let apiKey = `8d9838178b5b401f1b4e7cb5af18e210`;\n    let latitude = props.coordinate.lon;\n    let longitude = props.coordinate.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}`;\n    try {\n      const response = await axios.get(apiUrl);\n      handleResponse(response);\n    } catch (error) {\n      if (error.response && error.response.status === 429) {\n        // Retry with exponential backoff\n        await retryWithExponentialBackoff(makeApiRequest);\n      } else {\n        // Handle other errors\n        console.error(\"Failed to make API request:\", error);\n      }\n    }\n  }\n  async function retryWithExponentialBackoff(requestFunction, retryCount = 0) {\n    try {\n      const response = await requestFunction();\n      return response;\n    } catch (error) {\n      if (error.response && error.response.status === 429 && retryCount < 3) {\n        // Retry with exponential backoff\n        const delay = 2 ** retryCount * 1000; // Exponential backoff formula\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return retryWithExponentialBackoff(requestFunction, retryCount + 1);\n      } else {\n        // Give up after max retries or handle other errors\n        console.error(\"Failed to make API request:\", error);\n        throw error;\n      }\n    }\n  }\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Forecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 6) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(ForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n_s(Forecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n_c = Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useEffect","useState","axios","ForecastDay","jsxDEV","_jsxDEV","Forecast","props","_s","loaded","setLoaded","forecast","setForecast","load","coordinate","makeApiRequest","apiKey","latitude","lon","longitude","lat","apiUrl","response","get","handleResponse","error","status","retryWithExponentialBackoff","console","requestFunction","retryCount","delay","Promise","resolve","setTimeout","data","daily","className","children","map","dailyForecast","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aleciamclean/Desktop/Coding/GitHub/weather-app-react/my-app/src/Forecast.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Forecast.css\";\nimport axios from \"axios\";\nimport ForecastDay from \"./ForecastDay\";\n\nexport default function Forecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n    load();\n  }, [props.coordinate]);\n\n  async function makeApiRequest() {\n    let apiKey = `8d9838178b5b401f1b4e7cb5af18e210`;\n    let latitude = props.coordinate.lon;\n    let longitude = props.coordinate.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}`;\n\n    try {\n      const response = await axios.get(apiUrl);\n      handleResponse(response);\n    } catch (error) {\n      if (error.response && error.response.status === 429) {\n        // Retry with exponential backoff\n        await retryWithExponentialBackoff(makeApiRequest);\n      } else {\n        // Handle other errors\n        console.error(\"Failed to make API request:\", error);\n      }\n    }\n  }\n\n  async function retryWithExponentialBackoff(requestFunction, retryCount = 0) {\n    try {\n      const response = await requestFunction();\n      return response;\n    } catch (error) {\n      if (error.response && error.response.status === 429 && retryCount < 3) {\n        // Retry with exponential backoff\n        const delay = 2 ** retryCount * 1000; // Exponential backoff formula\n        await new Promise((resolve) => setTimeout(resolve, delay));\n        return retryWithExponentialBackoff(requestFunction, retryCount + 1);\n      } else {\n        // Give up after max retries or handle other errors\n        console.error(\"Failed to make API request:\", error);\n        throw error;\n      }\n    }\n  }\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"Forecast\">\n        <div className=\"row\">\n          {forecast.map(function (dailyForecast, index) {\n            if (index < 6) {\n              return (\n                <div className=\"col\" key={index}>\n                  <ForecastDay data={dailyForecast} />\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}