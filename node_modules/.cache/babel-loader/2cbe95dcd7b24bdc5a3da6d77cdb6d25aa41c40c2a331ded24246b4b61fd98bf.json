{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function FormatDate(props){let months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];let days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];let month=months[props.date.getMonth()];let date=props.date.getDate();let day=days[props.date.getDay()];let hours=props.date.getHours();if(hours<10){hours=\"0{hours}\";}let minutes=props.date.getMinutes();if(minutes<10){minutes=\"0\".concat(minutes);}let amOrPm=hours>=12?\"pm\":\"am\";hours=hours%12;hours=hours?hours:12;return/*#__PURE__*/_jsxs(\"div\",{children:[month,\" \",date,\" \",/*#__PURE__*/_jsx(\"br\",{}),day,\" \",hours,\":\",minutes,amOrPm]});}","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","FormatDate","props","months","days","month","date","getMonth","getDate","day","getDay","hours","getHours","minutes","getMinutes","concat","amOrPm","children"],"sources":["/Users/aleciamclean/Desktop/Coding/GitHub/weather-app-react/src/FormatDate.js"],"sourcesContent":["import React from \"react\";\n\nexport default function FormatDate(props) {\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  let month = months[props.date.getMonth()];\n  let date = props.date.getDate();\n  let day = days[props.date.getDay()];\n  let hours = props.date.getHours();\n  if (hours < 10) {\n    hours = `0{hours}`;\n  }\n  let minutes = props.date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  let amOrPm = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n\n  return (\n    <div>\n      {month} {date} <br />\n      {day} {hours}:{minutes}\n      {amOrPm}\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,cAAe,SAAS,CAAAC,UAAUA,CAACC,KAAK,CAAE,CACxC,GAAI,CAAAC,MAAM,CAAG,CACX,SAAS,CACT,UAAU,CACV,OAAO,CACP,OAAO,CACP,KAAK,CACL,MAAM,CACN,MAAM,CACN,QAAQ,CACR,WAAW,CACX,SAAS,CACT,UAAU,CACV,UAAU,CACX,CACD,GAAI,CAAAC,IAAI,CAAG,CACT,QAAQ,CACR,QAAQ,CACR,SAAS,CACT,WAAW,CACX,UAAU,CACV,QAAQ,CACR,UAAU,CACX,CAED,GAAI,CAAAC,KAAK,CAAGF,MAAM,CAACD,KAAK,CAACI,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CACzC,GAAI,CAAAD,IAAI,CAAGJ,KAAK,CAACI,IAAI,CAACE,OAAO,CAAC,CAAC,CAC/B,GAAI,CAAAC,GAAG,CAAGL,IAAI,CAACF,KAAK,CAACI,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CACnC,GAAI,CAAAC,KAAK,CAAGT,KAAK,CAACI,IAAI,CAACM,QAAQ,CAAC,CAAC,CACjC,GAAID,KAAK,CAAG,EAAE,CAAE,CACdA,KAAK,WAAa,CACpB,CACA,GAAI,CAAAE,OAAO,CAAGX,KAAK,CAACI,IAAI,CAACQ,UAAU,CAAC,CAAC,CACrC,GAAID,OAAO,CAAG,EAAE,CAAE,CAChBA,OAAO,KAAAE,MAAA,CAAOF,OAAO,CAAE,CACzB,CACA,GAAI,CAAAG,MAAM,CAAGL,KAAK,EAAI,EAAE,CAAG,IAAI,CAAG,IAAI,CACtCA,KAAK,CAAGA,KAAK,CAAG,EAAE,CAClBA,KAAK,CAAGA,KAAK,CAAGA,KAAK,CAAG,EAAE,CAE1B,mBACEX,KAAA,QAAAiB,QAAA,EACGZ,KAAK,CAAC,GAAC,CAACC,IAAI,CAAC,GAAC,cAAAR,IAAA,QAAK,CAAC,CACpBW,GAAG,CAAC,GAAC,CAACE,KAAK,CAAC,GAAC,CAACE,OAAO,CACrBG,MAAM,EACJ,CAAC,CAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}