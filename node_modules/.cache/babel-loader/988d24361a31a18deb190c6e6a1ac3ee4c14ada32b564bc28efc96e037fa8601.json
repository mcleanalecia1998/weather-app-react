{"ast":null,"code":"var _jsxFileName = \"/Users/aleciamclean/Desktop/Coding/GitHub/weather-app-react/my-app/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherDetails from \"./WeatherDetails\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      city: response.data.name,\n      temperature: response.data.main.temp,\n      feels: response.data.main.feels_like,\n      humidity: response.data.main.humidity,\n      date: new Date(response.data.dt * 1000),\n      wind: response.data.wind.speed,\n      iconUrl: \"http://shecodes-assets.s3.amazonaws.com/api/weather/icons/scattered-clouds-night.png\",\n      description: response.data.weather[0].description\n    });\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n  function search() {\n    let units = `metric`;\n    let apiKey = `af2a32a0cac5cf8a4097b72fe7238e46`;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"Enter a city...\",\n              required: true,\n              className: \"form-control\",\n              autoFocus: \"on\",\n              onChange: handleCityChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"btn btn-primary\",\n              type: \"submit\",\n              value: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherDetails, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  } else {\n    search();\n    return \"Loading..\";\n  }\n}\n_s(Weather, \"dsaBKiCPm9xAtefQhlJvmvwFSHU=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","WeatherDetails","jsxDEV","_jsxDEV","Weather","props","_s","weatherData","setWeatherData","ready","city","setCity","defaultCity","handleResponse","response","data","name","temperature","main","temp","feels","feels_like","humidity","date","Date","dt","wind","speed","iconUrl","description","weather","handleSubmit","event","preventDefault","handleCityChange","target","value","search","units","apiKey","apiUrl","get","then","className","children","onSubmit","type","placeholder","required","autoFocus","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aleciamclean/Desktop/Coding/GitHub/weather-app-react/my-app/src/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherDetails from \"./WeatherDetails\";\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      city: response.data.name,\n      temperature: response.data.main.temp,\n      feels: response.data.main.feels_like,\n      humidity: response.data.main.humidity,\n      date: new Date(response.data.dt * 1000),\n      wind: response.data.wind.speed,\n      iconUrl:\n        \"http://shecodes-assets.s3.amazonaws.com/api/weather/icons/scattered-clouds-night.png\",\n      description: response.data.weather[0].description,\n    });\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  function search() {\n    let units = `metric`;\n    let apiKey = `af2a32a0cac5cf8a4097b72fe7238e46`;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"Weather\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <input\n                type=\"search\"\n                placeholder=\"Enter a city...\"\n                required\n                className=\"form-control\"\n                autoFocus=\"on\"\n                onChange={handleCityChange}\n              />\n            </div>\n            <div>\n              <input className=\"btn btn-primary\" type=\"submit\" value=\"Search\" />\n            </div>\n          </div>\n        </form>\n        <WeatherDetails data={weatherData} />\n      </div>\n    );\n  } else {\n    search();\n    return \"Loading..\";\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}