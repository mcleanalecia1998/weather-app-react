{"ast":null,"code":"var _jsxFileName = \"/Users/aleciamclean/Desktop/Coding/GitHub/weather-app-react/my-app/src/Forecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Forecast.css\";\nimport axios from \"axios\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport ForecastDay from \"./ForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Forecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 6) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(ForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = `8d9838178b5b401f1b4e7cb5af18e210`;\n    let latitude = props.coordinate.lon;\n    let longitude = props.coordinate.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  return null;\n}\n_s(Forecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n_c = Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useState","axios","WeatherIcon","ForecastDay","jsxDEV","_jsxDEV","Forecast","props","_s","loaded","setLoaded","forecast","setForecast","handleResponse","response","data","daily","className","children","map","dailyForecast","index","fileName","_jsxFileName","lineNumber","columnNumber","apiKey","latitude","coordinate","lon","longitude","lat","apiUrl","get","then","_c","$RefreshReg$"],"sources":["/Users/aleciamclean/Desktop/Coding/GitHub/weather-app-react/my-app/src/Forecast.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Forecast.css\";\nimport axios from \"axios\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport ForecastDay from \"./ForecastDay\";\n\nexport default function Forecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"Forecast\">\n        <div className=\"row\">\n          {forecast.map(function (dailyForecast, index) {\n            if (index < 6) {\n              return (\n                <div className=\"col\" key={index}>\n                  <ForecastDay data={dailyForecast} />\n                </div>\n              );\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    let apiKey = `8d9838178b5b401f1b4e7cb5af18e210`;\n    let latitude = props.coordinate.lon;\n    let longitude = props.coordinate.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}`;\n\n    axios.get(apiUrl).then(handleResponse);\n  }\n  return null;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,gBAAgB;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9C,SAASa,cAAcA,CAACC,QAAQ,EAAE;IAChCF,WAAW,CAACE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;IAChCN,SAAS,CAAC,IAAI,CAAC;EACjB;EAEA,IAAID,MAAM,EAAE;IACV,oBACEJ,OAAA;MAAKY,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBb,OAAA;QAAKY,SAAS,EAAC,KAAK;QAAAC,QAAA,EACjBP,QAAQ,CAACQ,GAAG,CAAC,UAAUC,aAAa,EAAEC,KAAK,EAAE;UAC5C,IAAIA,KAAK,GAAG,CAAC,EAAE;YACb,oBACEhB,OAAA;cAAKY,SAAS,EAAC,KAAK;cAAAC,QAAA,eAClBb,OAAA,CAACF,WAAW;gBAACY,IAAI,EAAEK;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GADZJ,KAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE1B,CAAC;UAEV;QACF,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC,MAAM;IACL,IAAIC,MAAM,GAAI,kCAAiC;IAC/C,IAAIC,QAAQ,GAAGpB,KAAK,CAACqB,UAAU,CAACC,GAAG;IACnC,IAAIC,SAAS,GAAGvB,KAAK,CAACqB,UAAU,CAACG,GAAG;IACpC,IAAIC,MAAM,GAAI,uDAAsDL,QAAS,QAAOG,SAAU,UAASJ,MAAO,EAAC;IAE/GzB,KAAK,CAACgC,GAAG,CAACD,MAAM,CAAC,CAACE,IAAI,CAACrB,cAAc,CAAC;EACxC;EACA,OAAO,IAAI;AACb;AAACL,EAAA,CAlCuBF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}